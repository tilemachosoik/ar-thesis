// #version 430
layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(binding = 0, rgba8) uniform readonly image2D inputImage;
layout(binding = 2, r8) uniform readonly image2D maskImage;
layout(binding = 4, rgba8) uniform image2D outputImage;
// layout(binding = 6, rgba8) uniform writeonly image3D voxelRadiance;

layout(location = 0)
uniform uint width;
layout(location = 1)
uniform uint height;
layout(location = 2)
uniform uint offset_x;
layout(location = 3)
uniform uint offset_y;

void main()
{
    if(gl_GlobalInvocationID.x >= width ||
        gl_GlobalInvocationID.y >= height ||
        gl_GlobalInvocationID.z >= 1) return;

    ivec2 writePos = ivec2(gl_GlobalInvocationID);

    // input color
    vec3 inputColor = imageLoad(inputImage, writePos).rgb;

    // mask color
    float maskColor = imageLoad(maskImage, writePos).r;

    ivec2 writePosOriginal = writePos + ivec2(offset_x, offset_y);

    // logo image
    vec4 logoColor = imageLoad(outputImage, writePosOriginal).rgba;
    vec3 logoColor3 = logoColor.rgb * logoColor.a + (1. - logoColor.a) * inputColor;
    // if (logoColor.a < 1.)
    //    logoColor3 = inputColor;

    // combine colors
    vec3 finalColor = logoColor3 * (1. - maskColor) + maskColor * inputColor;

    // we use alpha of 1.
    imageStore(outputImage, writePosOriginal, vec4(finalColor, 1.));
}
